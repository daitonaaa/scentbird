// Close icon
@mixin closeIcon($bg, $hover, $position: relative, $width: 2px, $height: 80%) {
  position: $position;
  cursor: pointer;

  &:before,
  &:after {
    position: absolute;
    content: '';
    top: 50%;
    left: 50%;
    background: $bg;
  }

  &:before {
    margin-top: - ($width / 2);
    margin-left: - ($height / 2);
    width: $height;
    height: $width;
    transform: rotate(45deg);
  }

  &:after {
    margin-top: - ($height / 2);
    margin-left: - ($width / 2);
    width: $width;
    height: $height;
    transform: rotate(-135deg);
  }

  &:hover:before,
  &:hover:after {
    background: $hover;
  }
}

// Media
$media-stack:
  (group: small,  rule: 'only screen and (max-width: 1000px) and (min-width: 769px)'),
  (group: tablet, rule: 'only screen and (max-width: 768px) and (min-width: 481px)'),
  (group: phone,  rule: 'only screen and (max-width: 480px)'),
  (group: print,  rule: 'only print');

@mixin media($group) {
  @each $media in $media-stack {
    @if ($group == map-get($media, group)) {
      $rule: map-get($media, rule);
      @media #{$rule} {
        @content;
      }
    }
  }
}

// Rotate animation
@mixin keyframes($animationName) {
  @keyframes #{$animationName} {
    @content;
  }
}

@mixin animate($name, $duration, $iteration, $direction, $timing) {
  animation-duration: $duration;
  animation-iteration-count: $iteration;
  animation-name: $name;
  animation-direction: $direction;
  animation-timing-function: $timing;
}

@include keyframes(infinityRotate) {
  0% {
    transform: rotate(0deg);
  }

  20% {
    transform: rotate(72deg);
  }

  40% {
    transform: rotate(144deg);
  }

  60% {
    transform: rotate(216deg);
  }

  80% {
    transform: rotate(288deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

@mixin infinityRotate {
  @include animate(infinityRotate, 1.7s, infinite, normal, ease);
}

@mixin truncateText {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
